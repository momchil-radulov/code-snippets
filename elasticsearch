# install elasticsearch
## install
wget -qO - https://artifacts.elastic.co/GPG-KEY-elasticsearch | sudo gpg --dearmor -o /usr/share/keyrings/elasticsearch-keyring.gpg
sudo apt-get install apt-transport-https
echo "deb [signed-by=/usr/share/keyrings/elasticsearch-keyring.gpg] https://artifacts.elastic.co/packages/8.x/apt stable main" | sudo tee /etc/apt/sources.list.d/elastic-8.x.list
sudo apt-get update && sudo apt-get install elasticsearch
## enable and run
sudo systemctl daemon-reload
sudo systemctl enable elasticsearch.service
sudo systemctl start elasticsearch.service
sudo systemctl status elasticsearch.service
curl --insecure https://localhost:9200/
## remove
sudo apt-get remove elasticsearch
sudo apt autoremove

## install dpkg
wget https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-8.17.1-amd64.deb
wget https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-8.17.1-amd64.deb.sha512
shasum -a 512 -c elasticsearch-8.17.1-amd64.deb.sha512 
sudo dpkg -i elasticsearch-8.17.1-amd64.deb
sudo systemctl daemon-reload
sudo systemctl enable elasticsearch.service
sudo systemctl start elasticsearch.service
sudo systemctl status elasticsearch.service
curl --insecure https://localhost:9200/

### kibana
wget https://artifacts.elastic.co/downloads/kibana/kibana-8.17.1-amd64.deb
shasum -a 512 kibana-8.17.1-amd64.deb 
sudo dpkg -i kibana-8.17.1-amd64.deb
sudo systemctl daemon-reload
sudo systemctl enable kibana
sudo systemctl start kibana
sudo systemctl status kibana
http://localhost:5601/
## codes
sudo /usr/share/elasticsearch/bin/elasticsearch-reset-password --username kibana_system
sudo /usr/share/kibana/bin/kibana-verification-code


# install opensearch
## install
curl -o- https://artifacts.opensearch.org/publickeys/opensearch.pgp | sudo apt-key add -
echo "deb https://artifacts.opensearch.org/releases/bundle/opensearch/2.x/apt stable main" | sudo tee -a /etc/apt/sources.list.d/opensearch-2.x.list
echo "deb https://artifacts.opensearch.org/releases/bundle/opensearch-dashboards/2.x/apt stable main" | sudo tee -a /etc/apt/sources.list.d/opensearch-dashboards-2.x.list
sudo apt-get update
sudo apt list -a opensearch
sudo apt list -a opensearch-dashboards
sudo apt-get install opensearch
sudo apt-get install opensearch-dashboards
sudo apt-get upgrade opensearch
sudo apt-get upgrade opensearch-dashboards
## enable and run
sudo systemctl enable opensearch
sudo systemctl start opensearch
sudo systemctl status opensearch
sudo systemctl enable opensearch-dashboards
sudo systemctl start opensearch-dashboards
sudo systemctl status opensearch-dashboards
## test
curl -X GET https://localhost:9200 -u 'admin:admin' --insecure
## urls
curl -X GET https://localhost:9200/_cat/plugins?v -u 'admin:admin' --insecure  # get plugins

## settings

[/etc/opensearch/opensearch.yml]
network.host: 0.0.0.0
discovery.type: single-node
plugins.security.disabled: true

## disable opensearch-dashboards security plugin
cd /usr/share/opensearch-dashboards
bin/opensearch-dashboards-plugin list
sudo bin/opensearch-dashboards-plugin remove --allow-root securityDashboards

[/etc/opensearch-dashboards/opensearch_dashboards.yml]
server.host: 0.0.0.0
opensearch.hosts: [http://localhost:9200]
#opensearch_security.multitenancy.enabled: true
#opensearch_security.multitenancy.tenants.preferred: [Private, Global]
#opensearch_security.readonly_mode.roles: [kibana_read_only]
## Use this setting if you are running opensearch-dashboards without https
#opensearch_security.cookie.secure: false

## restart
sudo systemctl restart opensearch
sudo systemctl restart opensearch-dashboards
## test
curl http://localhost:9200
curl http://localhost:5601 -u 'admin:admin'
## urls
curl http://localhost:9200/_cat/plugins?v


docker network create net1
docker network ls
docker run -d --name elasticsearch --net net1 -p 9200:9200 -p 9300:9300 -e "discovery.type=single-node" ecurlasticsearch:7.8.0
docker run --rm -d --name elasticsearch --net net1 -p 9200:9200 -p 9300:9300 \
       -v data:/usr/share/elasticsearch/data \
       -e "discovery.type=single-node" -e "ES_JAVA_OPTS=-Xms512m -Xmx512m" \
       docker.elastic.co/elasticsearch/elasticsearch:7.8.0

[run.sh]
1 #!/bin/bash
2 docker run --rm -d --name elasticsearch --net net1 -p 9200:9200 -p 9300:9300 \
3        -v data:/usr/share/elasticsearch/data \
4        -e "discovery.type=single-node" -e "ES_JAVA_OPTS=-Xms512m -Xmx512m" \
5        docker.elastic.co/elasticsearch/elasticsearch:7.8.0
6 docker run --rm -d --name kibana --net net1 -p 5601:5601 kibana:7.8.1

docker container ls OR docker container ps
docker container stop elasticsearch
docker stats elasticsearch
# volumes
docker volume ls
docker volume inspect data

# Copy an index from production to staging with mappings:
docker run --rm -ti elasticdump/elasticsearch-dump \
  --input=http://production.es.com:9200/my_index \
  --output=http://staging.es.com:9200/my_index \
  --type=mapping
docker run --rm -ti elasticdump/elasticsearch-dump \
  --input=http://production.es.com:9200/my_index \
  --output=http://staging.es.com:9200/my_index \
  --type=data

# Backup index data to a file:
docker run --rm -ti -v /data:/tmp elasticdump/elasticsearch-dump \
  --input=http://production.es.com:9200/my_index \
  --output=/tmp/my_index_mapping.json \
  --type=data

# logstash
sudo apt install openjdk-8-jre-headless
sudo apt update
sudo apt install logstash

# filebeat
sudo apt update
sudo apt install filebeat
sudo systemctl stop elasticsearch.service
sudo systemctl start elasticsearch.service
cd /etc/filebeat/modules.d
sudo mv apache.yml.disabled apache.yml

[apache.yml]
var paths: ["/home/student/logs/access*"]
var paths: ["/home/student/logs/error*"]

sudo systemctl enable filebeat.service
sudo systemctl start filebeat.service
# loading kibana dashboards, but kibana must be running and reachable
sudo filebeat setup --dashboards
sudo systemctl stop kibana.service
sudo systemctl start kibana.service
