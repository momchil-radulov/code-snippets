# Button: setup
## don't have high voltage on input line
void setup() {
  //configure pin 2 as an input and enable the internal pull-up resistor
  pinMode(2, INPUT_PULLUP);
}

# Loop: constant run time of a loop
const unsigned long loopPeriod = 5; //milliseconds
static unsigned long lastLoop;
void loop() {
  check_button();
  
  if (millis()-lastLoop < loopPeriod) {
    delay(loopPeriod - (millis()-lastLoop));
  }
  lastLoop = millis();
}

# Button: detect button input
is_button_pressed = false;
button_counter = 0;
void check_button() {
  int button_status = digitalRead(2);
  if (button_status == HIGH) {
    button_counter = button_counter - 1;
    if (button_counter < 0) {
      button_counter = 0;
      if (is_button_pressed) {
        is_button_pressed = false;
        // ... button is pressed ...
      }
    }
  }
  else {
    button_counter = button_counter + 1;
    if (button_counter > 10) {
      button_counter = 10;
      if (!is_button_pressed) {
        is_button_pressed = true;
      }
    }
  }
}

// io_array
const int BUTTON_OK = 0;
const int LED_1 = 1;
const int LED_2 = 2;
value => on input, 1 if value_counter = value_threshold, 0 if value_counter = 0
value_counter => on input, value from 0 to value_threshold, =+1 on cicle if high value measurment, =-1 on cicle if low value measurment
value_counter = 10 => on output, 10 cicles voltage, different from default value, on every cicle =-1 to 0
value = 0 => on output, lower default value; 1 => high default value;

//                       is_output, var_const, pin_number, value, value_counter, value_threshold
int io_array[3][6] = { { 0,         0,         3,          0,     0,             10              },
                       { 1,         1,         4,          0,     0,             0               },
                       { 1,         1,         4,          0,     0,             0               } };
