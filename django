python3 -m venv venv
. venv/bin/activate

pip install --upgrade pip
pip install wheel
pip install django
pip install gunicorn
pip install 'uvicorn[gunicorn]'

django-admin startproject iot
cd iot
./manage.py startapp mc
./manage.py runserver

django-admin makemessages -l en
django-admin compilemessages

complete -f -d -W "runserver createsuperuser test shell dbshell \
migrate makemigrations loaddata dumpdata" ./manage.py

./manage.py inspectdb --include-views > inspectdb.txt
./manage.py dbshell

./manage.py makemigrations
./manage.py migrate

gunicorn iot.wsgi:application
python -m gunicorn kemsa.asgi:application -k uvicorn.workers.UvicornWorker

# clear database
rm db.sqlite3
find . -path "*/migrations/*.py" -not -name "__init__.py" -delete
find . -path "*/migrations/*.pyc"  -delete
./manage.py makemigrations
./manage.py migrate
./manage.py createsuperuser

# multilanguages
[settings.py]
LANGUAGE_CODE = 'en-us'  # По подразбиране език
LANGUAGES = [
    ('en', _('English')),
    ('bg', _('Bulgarian')),
    # Добави други езици тук
]
LOCALE_PATHS = [os.path.join(BASE_DIR, 'locale'),]
$ django-admin makemessages -l bg
$ vim locale/bg/LC_MESSAGES/*.po
$ django-admin compilemessages
## използване
from django.utils.translation import gettext_lazy as _
[models.py]
class Country(models.Model):
    name = models.CharField(max_length=100, verbose_name=_("Държава"))

    class Meta:
        verbose_name = _("Държава")
        verbose_name_plural = _("Държави")

    def __str__(self):
        return self.name

# systemd service
[/etc/systemd/system/my_service.service]
[Unit]
Description=My service
After=network.target

[Service]
User=<youruser>
Group=<yourgroup>
WorkingDirectory=/path/to/your/kemsa/project
ExecStart=/path/to/your/venv/bin/gunicorn my_app.asgi:application -k uvicorn.workers.UvicornWorker
Restart=on-failure
KillSignal=SIGQUIT
Type=notify
NotifyAccess=all

[Install]
WantedBy=multi-user.target

# systemd cli
sudo systemctl start my_service.service
sudo systemctl enable my_service.service
sudo systemctl status my_service.service
journalctl -u my_service.service
