# install

# install v.7
sudo apt update
sudo apt install software-properties-common
sudo add-apt-repository ppa:ondrej/php
sudo apt update
sudo apt install php7.0 php7.0-cli php7.0-fpm php7.0-mysql
# допълнителни полезни пакети
sudo apt install php7.0-mbstring php7.0-curl php7.0-json
php -v  # view version
php -m | grep mbstring # check a module
# стартираме сайта
sudo php -S 192.168.1.32:80

## install v.5.6
# base install
sudo add-apt-repository ppa:ondrej/php
sudo apt update
sudo apt install php5.6
sudo apt install php5.6-mysql php5.6-xml php5.6-curl php5.6-mbstring php5.6-mcrypt php5.6-gd php5.6-zip
php5.6 -v

# deployment ===>>>
sudo apt install php5.6-fpm php5.6-zip
# composer
php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
php -r "if (hash_file('sha384', 'composer-setup.php') === trim(file_get_contents('https://composer.github.io/installer.sig'))) { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;"
sudo php composer-setup.php --1
sudo php ./composer.phar --version
sudo php ./composer.phar install

## php ini виж phpinfo()
php --ini
# short_open_tag
sudo vim /etc/php/5.6/cli/php.ini
sudo vim /etc/php/5.6/fpm/php.ini
short_open_tag = Off => short_open_tag = On
memory_limit = 128M => memory_limit = 512M
# виж и nginx client_max_body_size 50M;
post_max_size = 50M
upload_max_filesize = 50M
max_execution_time = 0  # in seconds, 0 - no limit
# opcache
opcache.enable=1
opcache.memory_consumption=512
opcache.interned_strings_buffer=8
opcache.max_accelerated_files=10000
opcache.validate_timestamps=1
opcache.revalidate_freq=2

# php fpm производителни настройки
sudo vim /etc/php/5.6/fpm/pool.d/www.conf
pm = dynamic
pm.max_children = 80
pm.start_servers = 30
pm.min_spare_servers = 15  # core * 2
pm.max_spare_servers = 32  # core * 4
pm.max_requests = 500
php_admin_value[memory_limit] = 512M
slowlog = /var/log/php-fpm/slow.log
request_slowlog_timeout = 10

sudo systemctl restart php5.6-fpm.service

# nginx
sudo vim /etc/nginx/sites-available/your-site
server {
    listen 80 default_server;
    listen [::]:80 default_server;

    server_name yourdomain.com;
    root /var/www/html/your-site;
    client_max_body_size 50M;

    index index.php index.html index.htm;

    location / {
        try_files $uri $uri/ /index.php?$query_string;
    }

    location ~ \.php$ {
        include snippets/fastcgi-php.conf;
        fastcgi_pass unix:/run/php/php5.6-fpm.sock;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        include fastcgi_params;

        fastcgi_read_timeout 300;
        fastcgi_send_timeout 300;
    }
    client_body_timeout 300;
    client_header_timeout 300;
    keepalive_timeout 300;

    location ~ /\.ht {
        deny all;
    }
}

sudo ln -s /etc/nginx/sites-available/your-site /etc/nginx/sites-enabled/
sudo nginx -t
sudo systemctl reload nginx

<<<===

# set short_open_tag On if needed
php7.0 --ini  # find path to ini file
sudo vim /etc/php/7.0/cli/php.ini
[/etc/php/7.0/cli/php.ini]
short_open_tag = Off => short_open_tag = On

# composer
sudo apt install composer
composer install  # where is composer.json of your project
# if concrete version is needed
composer self-update --2.2  # if old version is needed
which composer  # to find path to composer

# composer old
php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
php composer-setup.php --version=1.10.17
mv composer.phar composer
php7.0 ./composer --version  # check version
php7.0 ./composer install    # run composer

[/etc/php/8.2/fpm/php.ini] или вашата конкретна версия
sudo vim /etc/php/5.6/fpm/php.ini
upload_max_filesize = 100M
post_max_size = 100M
# след това
sudo systemctl restart nginx.service
sudo systemctl restart php8.2-fpm.service

useful functions
htmlspecialchars
array_sum

# composer
https://getcomposer.org/download/
php5.6 composer.phar update
# в папката на файла composer.jsonutoload.php
composer install  # създава папка vendor с файл autoload.php

# включване на short_open_tag (<?) за стари сайтове
php --ini
phpinfo()
# за да разберем къде се намира файла php.ini и там променяме
short_open_tag = On


## DateTime
# init
$date = '2024-11-29'; or $date = false;
$date_from = new dateTime($date);
$date_to   = new dateTime($date);
$date_to->modify('+7 days');
# to string
$date_from->format('Y-m-d')
date('Y-m-d')  # текущата дата като текст '2024-11-29'

# create a dir
umask ( 0 );
mkdir ( 'path/to/dir', 0770, true );

<IfModule mod_rewrite.c>
    RewriteEngine On

    # Специално правило за /privacy-policy
    RewriteCond %{REQUEST_URI} ^/privacy-policy/?$
    RewriteRule ^privacy-policy/?$ /privacy-policy.txt [L]

</IfModule>
