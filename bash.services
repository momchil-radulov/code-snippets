service php7.0-fpm restart
service nginx start
service nginx reload OR service nginx restart
service nginx status
service nginx stop

cd /etc/systemd/system
sudo systemctl daemon-reload
sudo systemctl enable mqtt2db.service
sudo systemctl strart mqtt2db.service
sudo systemctl status mqtt2db.service
sudo systemctl stop mqtt2db.service

# logs
journalctl -u nginx.service OR journalctl -u nginx
journalctl -u nginx.service -b # logs only for the current boot

file:[mqtt2db.service]
[Unit]
Description=mqtt2db python script
Documentation=man:foo(1)
Documentation=http://www.rsyslog.com/doc/
After=syslog.target OR After=network.target
ConditionPathExists=!/etc/monit/mqtt2db_not_to_be_run
[Service]
Type=simple
User=root
Group=root
; [-] file is optional
EnvironmentFile=-/path/to/file.config
  OR Environment=PATH=/usr/bin:/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin
  OR Environment=PM2_HOME=/root/.pm2
WorkingDirectory=/root/git/automation/python
ExecStart=/usr/bin/python3 /root/git/automation/python/mqtt2db.py
ExecReload=/bin/kill -HUP $MAINPID
KillMode=process
Restart=always
TimeoutStartSec=10
RestartSec=10
StandardOutput=syslog OR StandardOutput=null
StandardError=syslog
[Install]
WantedBy=multi-user.target
;alias must be different from default file name
;Alias=mqtt2db.service

see https://stackoverflow.com/questions/1603109/how-to-make-a-python-script-run-like-a-service-or-daemon-in-linux
file[/etc/systemd/system/service_name.service]
[Unit]
Description = <Your service description here>
After = network.target # Assuming you want to start after network interfaces are made available
[Service]
Type = simple
ExecStart = python <Path of the script you want to run>
User = # User to run the script as
Group = # Group to run the script as
Restart = on-failure # Restart when there are errors
SyslogIdentifier = <Name of logs for the service>
RestartSec = 5
TimeoutStartSec = infinity
[Install]
WantedBy = multi-user.target # Make it accessible to other users

$ systemctl enable <service file name without .service extension>
$ systemctl daemon-reload
$ systemctl start <service file name without .service extension>
end see
