# Принципи
1. Data-Oriented programming
2. Two function abstraction, една глобална и една локална за модула
3. Данните, Настройките се вземат със функция/getter (една глобална и една локална [виж т.2])
4. Ниво на абстракция Data Manipulation Functions, DAL който генерира SQL
5. Данните са във формат Dictionary
6. Данните имат статус (изтрити, активни, версия)
7. Защитено програмиране, т.е. функциите валидират и входа и изхода си
8. Всяка причина на промяна се капсулира в Event и се пропагандира по целия стек на промяна
9. Правата се реализират: Subject(e.g.user), Action, Resource, Attributes
   "resource:action", "resource:action_byowner" ...
   Role => key "resource:action" value function (subject, resource) {check some attributes and return result}

# links
https://www.youtube.com/watch?v=8j29aAbtYWo => Web architecture
https://www.youtube.com/watch?v=uLp-zgset00 => CI/CD

# python
https://fastht.ml/

# css
https://bulma.io/
https://watercss.kognise.dev/
https://shakrmedia.github.io/petal/

# js
https://htmx.org/
https://alpinejs.dev/
https://zeptojs.com/

# git
branch fix/2024-09-29-some-fix
branch feature/2024-09-29-some-feature
branch dev, test server
branch main, production server
