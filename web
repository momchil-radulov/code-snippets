# Принципи
1. Data-Oriented programming
2. Two function abstraction, една глобална и една локална за модула
3. Данните, Настройките се вземат със функция/getter (една глобална и една локална [виж т.2])
4. Три нива на абстракция: Domain, Language, DAL генерира SQL
5. Данните имат статус на ниво Domain и на ниво DAL (примерно: изтрити, ...)
6. Защитено програмиране, т.е. функциите валидират и входа си и изхода си
7. Функциите на ниво Domain приемат
       вход: Event и Data - във формат Dictionary;
       връщат: дали са успешно минали, съобщение, резултат - във формат Dictionary;
8. Всяка причина на промяна се капсулира в Event и се пропагандира по целия стек на промяна

# links
https://www.youtube.com/watch?v=8j29aAbtYWo => Web architecture
https://www.youtube.com/watch?v=uLp-zgset00 => CI/CD

# python
https://fastht.ml/

# css
https://bulma.io/
https://watercss.kognise.dev/
https://shakrmedia.github.io/petal/

# js
https://htmx.org/
https://alpinejs.dev/
https://zeptojs.com/

# git
branch fix/2024-09-29-some-fix
branch feature/2024-09-29-some-feature
branch dev, test server
branch main, production server
