# setup Raspberry Pi image
sudo apt install rpi-imager

sudo apt update
sudo apt upgrade
sudo apt install python3-pip
sudo apt install nginx
sudo apt install byobu

chromium --kiosk start.html

dmesg | grep -i attached
umount /dev/sda1 /dev/sda2
sudo dd if=/dev/sda of=rasp.img bs=4M status=progress
sudo dd if=rasp.img of=/dev/sda bs=4M status=progress
 
ssh-keygen -t rsa -b 4096 -C "your_email@domain.com"
ssh-copy-id username@host

sudo apt-get install mosquitto mosquitto-clients
sudo systemctl status mosquitto
sudo systemctl enable mosquitto
sudo systemctl restart mosquitto
sudo systemctl start mosquitto
sudo systemctl stop mosquitto

sudo screen /dev/ttyUSB0 115200
ubuntu:ubuntu

certbot renew --dry-run

# nodered
bash <(curl -sL https://raw.githubusercontent.com/node-red/linux-installers/master/deb/update-nodejs-and-nodered)
sudo systemctl enable nodered.service

# network
ls /sys/class/net
sudo vim /etc/netplan/50-cloud-init.yaml

network:
    ethernets:
        eth0:
            dhcp4: true
            optional: true
    version: 2
    wifis:
        wlan0: 
            optional: true
            access-points:
                "WIFI":
                    password: "pass"
            dhcp4: true

sudo netplan --debug apply
ip a

sudo vim /etc/wpa_supplicant/wpa_supplicant.conf

network={
    ssid="WIFI"
    psk="pass"
    id_str="home"
}

network={
    ssid="network_name"
    psk="pass"
    id_str="mobile"
}

nmap -sP 192.168.43.0/24

# service
sudo systemctl daemon-reload
sudo systemctl enable test-py.service
sudo systemctl start test-py.service
sudo systemctl status test-py.service
sudo systemctl stop test-py.service
sudo systemctl restart test-py.service
# file [/lib/systemd/system/test-py.service]
[Unit]
After=network.target

[Service]
Type=simple
User=root
Group=root
ExecStart=/usr/bin/python3 /home/ubuntu/al.py
StandardInput=tty-force
KillMode=process
Restart=always
TimeoutStartSec=10
RestartSec=10
    
[Install]
WantedBy=multi-user.target

# reverse shell, see: https://www.tunnelsup.com/raspberry-pi-phoning-home-using-a-reverse-remote-ssh-tunnel/
sudo crontab -e => for root user
     crontab -e => for local user

@reboot sleep 20 && /bin/bash /home/linaro/Desktop/mqtt_mc0003_in.sh
@reboot sleep 20 && /bin/bash /home/linaro/Desktop/mqtt_mc0003_out.sh
@reboot sleep 25 && chromium --kiosk /home/linaro/Desktop/start.html

# manual
sudo openvpn /home/linaro/Desktop/rasp_2.ovpn
# auto
sudo apt install openvpn
sudo systemctl enable openvpn
cp /home/linaro/Desktop/rasp_2.ovpn /etc/openvpn/rasp_2.conf  # .ovpn => .conf
[/etc/default/openvpn]
AUTOSTART="rasp_2"

[mqtt_mc0003_in.sh]
while true
do
    mosquitto_sub -h host.com -p 8883 \
                  -t topic/subtopic \
                  -u user_name -P 'password' \
                  --cafile /home/linaro/Desktop/ca.crt --insecure \
                  | \ 
                  mosquitto_pub -l -h localhost -p 1883 -t device/in
    sleep 10
done

[mqtt_mc0003_out.sh]
while true
do
    mosquitto_sub -h localhost -p 1883 \
                  -t device/out \
                  | mosquitto_pub -l \
                  -h host.com -p 8883 \
                  -t topic/subtopic \
                  -u user_name -P password \
                  --cafile /home/linaro/Desktop/ca.crt --insecure
    sleep 10
done

[start.html]
<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="refresh" content="3; URL=http://localhost:1880/gui" />
</head>
<body>
<a href="http://localhost:1880/gui">gui</a>
</body>
</html>


*/1 * * * * ~/create_ssh_tunnel.sh &> /dev/nul
chmod 700 ~/create_ssh_tunnel.sh
[create_ssh_tunnel.sh] FILE
#!/bin/bash
createTunnel() {
  /usr/bin/ssh -N -R 2222:localhost:22 serverUser@25.25.25.25
  if [[ $? -eq 0 ]]; then
    echo Tunnel to jumpbox created successfully
  else
    echo An error occurred creating a tunnel to jumpbox. RC was $?
  fi
}
/bin/pidof ssh
if [[ $? -ne 0 ]]; then
  echo Creating new tunnel connection
  createTunnel
fi
[] END
