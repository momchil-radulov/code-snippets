sudo apt install mosquitto mosquitto-clients  # !!! overload /etc/mosquitto/mosquitto.conf
sudo systemctl status mosquitto
sudo systemctl enable mosquitto
sudo systemctl restart mosquitto
sudo systemctl start mosquitto
sudo systemctl stop mosquitto

sudo mosquitto -c /etc/mosquitto/mosquitto.conf

# truncate a big log file
# ще намали размера на файла до 0 байта, без да го изтрива или променя неговите файлови дескриптори,
# което означава, че Mosquitto ще продължи да пише в същия файл
sudo truncate -s 0 /var/log/mosquitto/mosquitto.log
ls -lh /var/log/mosquitto/mosquitto.log

file: /etc/mosquitto/mosquitto.conf
allow_anonymous false
password_file /etc/mosquitto/passwd
acl_file /etc/mosquitto/acl
file: acl
user mosquitto_user
topic access_to_topic

# websockets
port 1883
#log_type all
listener 9001
#log_type all
protocol websockets
socket_domain ipv4
allow_anonymous true

$mosquitto_passwd -b /etc/mosquitto/mosquitto_passwd user password
$service mosquitto reload

[/etc/mosquitto/mosquitto.acl]
user root
topic readwrite #
# anonymouse users and all other not matched upper !!!
pattern readwrite public/#


.w !bash
$mosquitto_pub -h hostname -p 1883 -t topic_name -m 'message hello world' -u user_name -P password
$mosquitto_sub -h hostname -p 1883 -t topic_name -u user_name -P password
# with ssl
openssl s_client -connect host.com:8883 -showcerts => copy Server certificate to ca.crt

mosquitto_sub -h host.com -p 8883 -t topic/topic -u user_name -P password --cafile ca.crt --insecure

see https://stackoverflow.com/questions/52283671/mqtt-publish-multiple-topics-with-mosquitto-pub-from-stdin
    https://hub.docker.com/_/eclipse-mosquitto
    
$ docker run -it -p 1883:1883 eclipse-mosquitto

$ gettemp --format "temp_%n=%v C" --repeat 3 | mosquitto_pub --stdin-line --topic /sensors/temps/outside
$ mosquitto_sub -t /sensors/temps/# -F "UPDATE Temperatures(%t, %p)" | mysqlcli
$ tail temperature.pool | mosquitto_pub -l --topic /sensors/temps/outside

# on different topics
$ gettemp --format "temp_%n=%v C" | publish.py

[publish.py]
import paho.mqtt.client as mqtt
import time
import sys
import re


def main():
  client = mqtt.Client()
  client.connect("localhost", 1883 , 60)
  client.loop_start()

  for line in sys.stdin:
    m = re.match('(.*)=(.*)', line)
    if m:
      client.publish(m.group(1), payload=m.group(2))

  time.sleep(2)
  client.loop_stop()

if __name__ == "__main__":
    main()
    
## Mosquitto config example
# Основни настройки
autosave_interval 900  # Запазване на всеки 15 минути вместо 30
persistence true
persistence_file mosquitto.db
persistence_location /var/lib/mosquitto/  # По-подходящо място от /tmp/

# Логиране
log_dest file /var/log/mosquitto/mosquitto.log
log_type warning
log_type error
log_type notice  # Добавено за важни събития
log_timestamp true
log_facility local5  # За интеграция с syslog

# Мрежови настройки
max_connections 1000  # Лимит на връзките
connection_messages true
listener 1883 127.0.0.1  # Нешифрован порт

# TLS настройки
listener 8883 0.0.0.0
cafile /etc/mosquitto/certificates/ca.crt
certfile /etc/mosquitto/certificates/mqtt.crt
keyfile /etc/mosquitto/certificates/mqtt.key
tls_version tlsv1.2  # Принудително използване на TLS 1.2+

# Сигурност
allow_anonymous false
password_file /etc/mosquitto/passwd  # Файл с потребители/пароли
acl_file /etc/mosquitto/acls  # Файл с ACL правила

# Оптимизации
set_tcp_nodelay true  # По-добра мрежова ефективност
message_size_limit 268435455  # ~256MB максимален размер на съобщение

## end Mosquitto config example


## mosquitto_user_manager.py ##
import sys
import subprocess
import os

def create_mosquitto_user(username, topic, password):
    # Проверка дали Mosquitto е инсталиран
    try:
        subprocess.run(["mosquitto_passwd", "--version"], capture_output=True, check=True)
    except FileNotFoundError:
        print("Грешка: Mosquitto не е инсталиран или не е в PATH.")
        sys.exit(1)

    # Създаване на потребител (с или без парола)
    passwd_file = "/etc/mosquitto/passwd"  # Стандартен път; променете според вашата конфигурация
    if not os.path.exists(passwd_file):
        open(passwd_file, "w").close()  # Създава файла, ако не съществува

    if password:
        subprocess.run(["mosquitto_passwd", "-b", passwd_file, username, password], check=True)
    else:
        with open(passwd_file, "a") as f:
            f.write(f"{username}:\n")  # Потребител без парола

    # Конфигурационен файл за ACL (Access Control List)
    acl_file = "/etc/mosquitto/acl"  # Променете според вашата конфигурация
    with open(acl_file, "a") as f:
        f.write(f"\nuser {username}\ntopic readwrite {topic}/#\n")

    print(f"Потребител {username} е създаден успешно с права за '{topic}/#'.")

if __name__ == "__main__":
    if len(sys.argv) != 2:
        print("Употреба: python mosquitto_user_manager.py 'user:topic:pass'")
        sys.exit(1)

    input_str = sys.argv[1]
    parts = input_str.split(":")
    if len(parts) != 3:
        print("Грешен формат. Очаква се 'user:topic:pass'")
        sys.exit(1)

    username, topic, password = parts
    if not username or not topic:
        print("Потребителското име и topic са задължителни.")
        sys.exit(1)

    create_mosquitto_user(username, password if password != "" else None, topic)
## end mosquitto_user_manager.py ##
